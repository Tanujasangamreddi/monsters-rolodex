{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/search-Box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredmonsters","filter","toLowerCase","includes","e","target","value","String","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAAe,I,wBCEFA,EAAK,SAACC,GACnB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,mCAAMN,EAAMI,QAAQG,aCJfC,EAAS,SAACR,GAEnB,OADAS,QAAQC,IAAIV,GACL,qBAAKC,UAAU,YAAf,SACDD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAC5B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLdQ,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACpB,uBAAOd,UAAU,SACbe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCHG,E,kDApCf,aAAc,IAAD,8BACX,gBACKC,MAAM,CACVR,SAAS,GACTS,YAAY,IAJF,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACf,SAASc,S,oBAErC,WAAS,IAAD,OACN,EAAgCE,KAAKR,MAA7BR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YACZQ,EAAiBjB,EAASkB,QAAO,SAAAzB,GAAO,OAC5CA,EAAQE,KAAKwB,cAAcC,SAASX,EAAYU,kBAIlD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWa,YAAY,SAASC,aAAc,SAAAiB,GAAC,OAAE,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WACrF,cAAC,EAAD,CAAUvB,SAAUiB,IAElB,4BACGD,KAAKR,MAAMgB,SAEd,wBAAQC,QAAS,kBAAI,EAAKV,SAAS,CAAES,OAAO,iBAA5C,6B,GA9BQE,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.74d78519.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import './card.styles.css';\r\n\r\nexport const Card=(props)=>{\r\nreturn(\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h3>{props.monster.name}</h3>\r\n        <p>  {props.monster.email}</p>  \r\n\r\n        </div>\r\n)\r\n}","import './card-list.styles.css';\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList=(props)=>{\r\n    console.log(props)\r\n    return(<div className='card-list'>\r\n        { props.monsters.map(monster=>(\r\n        <Card key={monster.id} monster={monster} />\r\n        ))\r\n      }\r\n      </div>)\r\n}; ","import './search-Box.styles.css';\r\n\r\nexport const SearchBox= ({placeholder,handleChange}) => (\r\n    <input className='search' \r\n        type=\"search\" \r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n        />\r\n\r\n)","import logo from './logo.svg';\nimport './App.css';\nimport {Component} from 'react'\nimport { CardList } from './components/card-list/card-list.component';\nimport {SearchBox} from './components/searchbox/search-Box.component';\n\nclass App extends Component{\nconstructor(){\n  super();\n  this.state={\n   monsters:[],\n   searchField:''\n  };\n\n}\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users=>this.setState({monsters:users  }));\n}\n  render(){\n    const { monsters, searchField }=this.state;\n    const filteredmonsters=monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    \n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder=\"search\" handleChange={e=>this.setState({searchField:e.target.value})}/>\n        <CardList monsters={filteredmonsters}>\n        </CardList>\n          <p>\n            {this.state.String}        \n          </p>\n          <button onClick={()=>this.setState({ String:'hello tanvi'})}>click me</button>\n          \n      </div>\n    );\n}} \n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}